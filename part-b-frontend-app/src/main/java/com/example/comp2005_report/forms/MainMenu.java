package com.example.comp2005_report.forms;

import com.example.comp2005_report.utils.MessageDialog;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import java.awt.*;
import java.net.URI;
import java.util.Locale;
import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;

public class MainMenu extends JFrame {

    private JPanel contentPane;
    private JButton patientsWhoHaveNotButton;
    private JButton closeButton;
    private JButton openGitHubRepoButton;
    private JLabel titleLabel;

    private final String GITHUB_REPO_LINK =
            "https://github.com/Plymouth-University/comp2005-assessment2-bobbymannino";

    public MainMenu() {
        setTitle("COMP2005 Java App");
        setContentPane(contentPane);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);
        setSize(500, 500);
        setResizable(false);

        patientsWhoHaveNotButton.addActionListener(event -> {
            new InadmittedPatients();
        });

        closeButton.addActionListener(event -> {
            System.exit(0);
        });

        openGitHubRepoButton.addActionListener(event -> {
            try {
                Desktop.getDesktop().browse(new URI(GITHUB_REPO_LINK));
            } catch (Exception e) {
                MessageDialog.showError(
                        "Failed to open link, if you want to manually open it the link is: " +
                                GITHUB_REPO_LINK,
                        contentPane
                );
            }
        });

        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(5, 2, new Insets(16, 16, 16, 16), 8, 8));
        patientsWhoHaveNotButton = new JButton();
        Font patientsWhoHaveNotButtonFont = this.$$$getFont$$$("Fira Mono", -1, -1, patientsWhoHaveNotButton.getFont());
        if (patientsWhoHaveNotButtonFont != null) patientsWhoHaveNotButton.setFont(patientsWhoHaveNotButtonFont);
        patientsWhoHaveNotButton.setText("Never Admitted Patients");
        contentPane.add(patientsWhoHaveNotButton, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        titleLabel = new JLabel();
        Font titleLabelFont = this.$$$getFont$$$("Fira Mono", Font.BOLD, 24, titleLabel.getFont());
        if (titleLabelFont != null) titleLabel.setFont(titleLabelFont);
        titleLabel.setText("COMP2005 Java App");
        contentPane.add(titleLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        closeButton = new JButton();
        Font closeButtonFont = this.$$$getFont$$$("Fira Mono", -1, -1, closeButton.getFont());
        if (closeButtonFont != null) closeButton.setFont(closeButtonFont);
        closeButton.setForeground(new Color(-6152165));
        closeButton.setText("Close App");
        contentPane.add(closeButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPane.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        openGitHubRepoButton = new JButton();
        Font openGitHubRepoButtonFont = this.$$$getFont$$$("Fira Mono", -1, -1, openGitHubRepoButton.getFont());
        if (openGitHubRepoButtonFont != null) openGitHubRepoButton.setFont(openGitHubRepoButtonFont);
        openGitHubRepoButton.setText("Open GitHub Repo");
        contentPane.add(openGitHubRepoButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
